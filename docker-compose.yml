version: '3.7'

volumes:
   pgdb:
   
secrets:
  ps_password:
    file: ./ps_password.txt
  secret_key:
    file: ./secret_key.txt

services:
  redis:
    image: redis
    restart: always

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: /run/secrets/ps_password
      POSTGRES_DB: sentry
    volumes:
     - pgdb:/var/lib/postgresql/data
    secrets:
     - ps_password
     - secret_key

  sentry:
    image: sentry
    restart: always
    links:
     - redis
     - postgres
    ports:
     - 9000:9000
    environment:
      SENTRY_SECRET_KEY: /run/secrets/secret_key
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: /run/secrets/ps_password
      SENTRY_REDIS_HOST: redis
    depends_on:
      - redis
      - postgres
    secrets:
     - ps_password
     - secret_key

  cron:
    image: sentry
    restart: always
    links:
     - redis
     - postgres
    command: "sentry run cron"
    environment:
      SENTRY_SECRET_KEY: /run/secrets/secret_key
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: /run/secrets/ps_password
      SENTRY_REDIS_HOST: redis
    depends_on:
      - redis
      - postgres
    secrets:
     - ps_password
     - secret_key

  worker:
    image: sentry
    restart: always
    links:
     - redis
     - postgres
    command: "sentry run worker"
    environment:
      SENTRY_SECRET_KEY: /run/secrets/secret_key
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: /run/secrets/ps_password
      SENTRY_REDIS_HOST: redis
    depends_on:
      - redis
      - postgres
    secrets:
     - ps_password
     - secret_key

  nginx:
    image: parmanbabra/sentry-nginx
    ports:
      - 80:80
    depends_on:
      - sentry
